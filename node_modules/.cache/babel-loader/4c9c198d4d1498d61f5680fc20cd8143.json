{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\katia\\\\OneDrive\\\\\\xC1rea de Trabalho\\\\Lorran\\\\weather-app\\\\src\\\\Components\\\\Local\\\\Local.js\",\n    _s = $RefreshSig$();\n\nimport axios from \"axios\";\nimport React, { useEffect, useState } from \"react\";\nimport \"./Local.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Local = () => {\n  _s();\n\n  const apiKey = \"749d030bb028567c6df26b3941472ec9\";\n  const [location, setLocation] = useState(false);\n  const [weather, setWeather] = useState(false);\n  const today = new Date();\n  const hour = today.getHours();\n  console.log(hour);\n\n  if (hour >= 6 && hour < 16) {\n    document.body.style.backgroundImage = \"url('../img/dia.png')\";\n  } else if (hour >= 16 && hour < 18) {\n    document.body.style.backgroundImage = \"url('../img/por-do-sol.png')\";\n  } else {\n    document.body.style.backgroundImage = \"url('../img/noite.png')\";\n  }\n\n  let getWeather = async (lat, long) => {\n    let res = await axios.get(`https://api.openweathermap.org/data/2.5/weather`, {\n      params: {\n        lat: lat,\n        lon: long,\n        appid: apiKey,\n        lang: \"pt\",\n        units: \"metric\"\n      }\n    });\n    setWeather(res.data);\n    console.log(res.data);\n  };\n\n  useEffect(() => {\n    navigator.geolocation.getCurrentPosition(position => {\n      getWeather(position.coords.latitude, position.coords.longitude);\n      setLocation(true);\n    });\n  }, []);\n\n  if (location === false) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"lugar text-center\",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"cidade\",\n        children: \"Voc\\xEA precisar\\xE1 habilitar a localiza\\xE7\\xE3o para utilizar o app!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this);\n  } else if (weather === false) {\n    /*#__PURE__*/\n    _jsxDEV(\"div\", {\n      className: \"lugar text-center\",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"cidade\",\n        children: \"Carregando clima...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 5\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"lugar text-center\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"cidade\",\n        children: weather[\"name\"]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"temperatura\",\n        children: [weather[\"main\"][\"temp\"], \"\\xBAC\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this);\n  }\n};\n\n_s(Local, \"3Yy4Em+h5dvlfVXQVM3wytPcOZ0=\");\n\n_c = Local;\nexport default Local;\n\nvar _c;\n\n$RefreshReg$(_c, \"Local\");","map":{"version":3,"names":["axios","React","useEffect","useState","Local","apiKey","location","setLocation","weather","setWeather","today","Date","hour","getHours","console","log","document","body","style","backgroundImage","getWeather","lat","long","res","get","params","lon","appid","lang","units","data","navigator","geolocation","getCurrentPosition","position","coords","latitude","longitude"],"sources":["C:/Users/katia/OneDrive/Área de Trabalho/Lorran/weather-app/src/Components/Local/Local.js"],"sourcesContent":["import axios from \"axios\";\r\nimport React, { useEffect, useState } from \"react\";\r\n\r\nimport \"./Local.css\";\r\n\r\nconst Local = () => {\r\n  const apiKey = \"749d030bb028567c6df26b3941472ec9\";\r\n\r\n  const [location, setLocation] = useState(false);\r\n\r\n  const [weather, setWeather] = useState(false);\r\n\r\n  const today = new Date();\r\n  const hour = today.getHours();\r\n\r\n  console.log(hour);\r\n\r\n  if (hour >= 6 && hour < 16) {\r\n    document.body.style.backgroundImage = \"url('../img/dia.png')\";\r\n  } else if (hour >= 16 && hour < 18) {\r\n    document.body.style.backgroundImage = \"url('../img/por-do-sol.png')\";\r\n  } else {\r\n    document.body.style.backgroundImage = \"url('../img/noite.png')\";\r\n  }\r\n\r\n  let getWeather = async (lat, long) => {\r\n    let res = await axios.get(\r\n      `https://api.openweathermap.org/data/2.5/weather`,\r\n      {\r\n        params: {\r\n          lat: lat,\r\n          lon: long,\r\n          appid: apiKey,\r\n          lang: \"pt\",\r\n          units: \"metric\",\r\n        },\r\n      }\r\n    );\r\n    setWeather(res.data);\r\n    console.log(res.data);\r\n  };\r\n\r\n  useEffect(() => {\r\n    navigator.geolocation.getCurrentPosition((position) => {\r\n      getWeather(position.coords.latitude, position.coords.longitude);\r\n      setLocation(true);\r\n    });\r\n  }, []);\r\n\r\n  if (location === false) {\r\n    return (\r\n      <div className=\"lugar text-center\">\r\n        <h1 className=\"cidade\">\r\n          Você precisará habilitar a localização para utilizar o app!\r\n        </h1>\r\n      </div>\r\n    );\r\n  } else if (weather === false) {\r\n    <div className=\"lugar text-center\">\r\n      <h1 className=\"cidade\">Carregando clima...</h1>\r\n    </div>;\r\n  } else {\r\n    return (\r\n      <div className=\"lugar text-center\">\r\n        <h2 className=\"cidade\">{weather[\"name\"]}</h2>\r\n\r\n        <h1 className=\"temperatura\">{weather[\"main\"][\"temp\"]}ºC</h1>\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nexport default Local;\r\n"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AAEA,OAAO,aAAP;;;AAEA,MAAMC,KAAK,GAAG,MAAM;EAAA;;EAClB,MAAMC,MAAM,GAAG,kCAAf;EAEA,MAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BJ,QAAQ,CAAC,KAAD,CAAxC;EAEA,MAAM,CAACK,OAAD,EAAUC,UAAV,IAAwBN,QAAQ,CAAC,KAAD,CAAtC;EAEA,MAAMO,KAAK,GAAG,IAAIC,IAAJ,EAAd;EACA,MAAMC,IAAI,GAAGF,KAAK,CAACG,QAAN,EAAb;EAEAC,OAAO,CAACC,GAAR,CAAYH,IAAZ;;EAEA,IAAIA,IAAI,IAAI,CAAR,IAAaA,IAAI,GAAG,EAAxB,EAA4B;IAC1BI,QAAQ,CAACC,IAAT,CAAcC,KAAd,CAAoBC,eAApB,GAAsC,uBAAtC;EACD,CAFD,MAEO,IAAIP,IAAI,IAAI,EAAR,IAAcA,IAAI,GAAG,EAAzB,EAA6B;IAClCI,QAAQ,CAACC,IAAT,CAAcC,KAAd,CAAoBC,eAApB,GAAsC,8BAAtC;EACD,CAFM,MAEA;IACLH,QAAQ,CAACC,IAAT,CAAcC,KAAd,CAAoBC,eAApB,GAAsC,yBAAtC;EACD;;EAED,IAAIC,UAAU,GAAG,OAAOC,GAAP,EAAYC,IAAZ,KAAqB;IACpC,IAAIC,GAAG,GAAG,MAAMvB,KAAK,CAACwB,GAAN,CACb,iDADa,EAEd;MACEC,MAAM,EAAE;QACNJ,GAAG,EAAEA,GADC;QAENK,GAAG,EAAEJ,IAFC;QAGNK,KAAK,EAAEtB,MAHD;QAINuB,IAAI,EAAE,IAJA;QAKNC,KAAK,EAAE;MALD;IADV,CAFc,CAAhB;IAYApB,UAAU,CAACc,GAAG,CAACO,IAAL,CAAV;IACAhB,OAAO,CAACC,GAAR,CAAYQ,GAAG,CAACO,IAAhB;EACD,CAfD;;EAiBA5B,SAAS,CAAC,MAAM;IACd6B,SAAS,CAACC,WAAV,CAAsBC,kBAAtB,CAA0CC,QAAD,IAAc;MACrDd,UAAU,CAACc,QAAQ,CAACC,MAAT,CAAgBC,QAAjB,EAA2BF,QAAQ,CAACC,MAAT,CAAgBE,SAA3C,CAAV;MACA9B,WAAW,CAAC,IAAD,CAAX;IACD,CAHD;EAID,CALQ,EAKN,EALM,CAAT;;EAOA,IAAID,QAAQ,KAAK,KAAjB,EAAwB;IACtB,oBACE;MAAK,SAAS,EAAC,mBAAf;MAAA,uBACE;QAAI,SAAS,EAAC,QAAd;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IADF;MAAA;MAAA;MAAA;IAAA,QADF;EAOD,CARD,MAQO,IAAIE,OAAO,KAAK,KAAhB,EAAuB;IAC5B;IAAA;MAAK,SAAS,EAAC,mBAAf;MAAA,uBACE;QAAI,SAAS,EAAC,QAAd;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IADF;MAAA;MAAA;MAAA;IAAA;EAGD,CAJM,MAIA;IACL,oBACE;MAAK,SAAS,EAAC,mBAAf;MAAA,wBACE;QAAI,SAAS,EAAC,QAAd;QAAA,UAAwBA,OAAO,CAAC,MAAD;MAA/B;QAAA;QAAA;QAAA;MAAA,QADF,eAGE;QAAI,SAAS,EAAC,aAAd;QAAA,WAA6BA,OAAO,CAAC,MAAD,CAAP,CAAgB,MAAhB,CAA7B;MAAA;QAAA;QAAA;QAAA;MAAA,QAHF;IAAA;MAAA;MAAA;MAAA;IAAA,QADF;EAOD;AACF,CAjED;;GAAMJ,K;;KAAAA,K;AAmEN,eAAeA,KAAf"},"metadata":{},"sourceType":"module"}